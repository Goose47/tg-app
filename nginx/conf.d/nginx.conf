server {
  listen 80;
  server_name rwfshr.ru;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name rwfshr.ru;

  ssl_certificate /etc/letsencrypt/live/tg/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/tg/privkey.pem; # managed by Certbot

  location / {
      proxy_pass http://tg_front:80;
  }
}

server {
  listen 80;
  server_name api.rwfshr.ru;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name api.rwfshr.ru;

  ssl_certificate /etc/letsencrypt/live/tg/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/tg/privkey.pem; # managed by Certbot

  charset utf-8;

  set $cors_origin "";
  set $cors_cred   "";
  set $cors_header "";
  set $cors_method "";

 if ($http_origin = "https://rwfshr.ru") {
      set $cors_origin $http_origin;
      set $cors_cred   true;
      set $cors_header $http_access_control_request_headers;
      set $cors_method $http_access_control_request_method;
 }

  add_header Access-Control-Allow-Origin      $http_origin always;
  add_header Access-Control-Allow-Credentials $cors_cred always;
  add_header Access-Control-Allow-Headers     $cors_header always;
  add_header Access-Control-Allow-Methods     $cors_method always;

  if ($request_method = 'OPTIONS') {
      return 204;
  }

  location / {
      proxy_pass http://tg_fastapi:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
  }
}